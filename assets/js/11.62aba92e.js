(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{210:function(a,r,s){"use strict";s.r(r);var e=s(28),t=Object(e.a)({},(function(){var a=this,r=a.$createElement,s=a._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"关于数组的常用方法整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于数组的常用方法整理"}},[a._v("#")]),a._v(" 关于数组的常用方法整理")]),a._v(" "),s("h2",{attrs:{id:"常用数组方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用数组方法"}},[a._v("#")]),a._v(" 常用数组方法")]),a._v(" "),s("h3",{attrs:{id:"array-push-在数组最后一项添加元素-会改变原数组-返回数组的新长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-push-在数组最后一项添加元素-会改变原数组-返回数组的新长度"}},[a._v("#")]),a._v(" array.push() 在数组最后一项添加元素 会改变原数组 返回数组的新长度")]),a._v(" "),s("h3",{attrs:{id:"array-pop-删除数组的最后一项-改变原数组-返回被删除的哪一个元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-pop-删除数组的最后一项-改变原数组-返回被删除的哪一个元素"}},[a._v("#")]),a._v(" array.pop()  删除数组的最后一项 改变原数组 返回被删除的哪一个元素")]),a._v(" "),s("h3",{attrs:{id:"array-unshift-在数组第一项前追加元素-改变原数组-返回数组的新长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-unshift-在数组第一项前追加元素-改变原数组-返回数组的新长度"}},[a._v("#")]),a._v(" array.unshift() 在数组第一项前追加元素 改变原数组 返回数组的新长度")]),a._v(" "),s("h3",{attrs:{id:"array-shift-删除数组的第一项元素-改变原素组-返回被删除的那个元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-shift-删除数组的第一项元素-改变原素组-返回被删除的那个元素"}},[a._v("#")]),a._v(" array.shift() 删除数组的第一项元素 改变原素组 返回被删除的那个元素")]),a._v(" "),s("h3",{attrs:{id:"array-splice-index-length"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-splice-index-length"}},[a._v("#")]),a._v(" array.splice(index,length,'')")]),a._v(" "),s("blockquote",[s("blockquote",[s("blockquote",[s("p",[a._v("当只有两个参数的时候 表示从数组的第index开始删除length哥元素\n当有三个参数的时候表示删除完后用str 替代")])])])]),a._v(" "),s("h3",{attrs:{id:"array-sort-数组排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-sort-数组排序"}},[a._v("#")]),a._v(" array.sort() 数组排序")]),a._v(" "),s("ul",[s("li",[a._v("数组中常用的迭代方法\n"),s("ul",[s("li",[a._v("forEach")]),a._v(" "),s("li",[a._v("map")]),a._v(" "),s("li",[a._v("filter")]),a._v(" "),s("li",[a._v("find")]),a._v(" "),s("li",[a._v("every")]),a._v(" "),s("li",[a._v("some")]),a._v(" "),s("li",[a._v("reduce\n*** for in 和Object.keys(obj).forEach((key)=>{})区别\nfor in会便利原型每次都要判断是否是自己身上的属性消耗性能")])])])]),a._v(" "),s("h2",{attrs:{id:"array-from"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-from"}},[a._v("#")]),a._v(" Array.from")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("+ 将一个类数组对象或者可便利的对象转换成一个真正的数组\n    + 所谓类数组对象最基本的要求就是具有length属性\n    ```\n    let arraylike = {\n        0:'tom',\n        1:'65',\n        2: '男',\n        3:['nike','adidas','puma'],\n        'length': 4\n    }\n    let arr =Array.from(arraylike)\n    console.log(arr)  ==> ['tom','65', '男',['nike','adidas','puma']]\n    // 如果将上面代码中length属性去掉呢？实践证明，答案会是一个长度为0的空数组\n    ```\n    + 将字符串转换为数组\n    ```\n    let str = 'hello world'\n    console.log(Array.from(str)) // ['h','e','l','l','o',' ','w','o','r','l','d']\n    ```\n")])])]),s("h3",{attrs:{id:"数组的遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的遍历"}},[a._v("#")]),a._v(" 数组的遍历")]),a._v(" "),s("h4",{attrs:{id:"for-of-遍历数组项（可以随时使用break语句停止遍历）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-of-遍历数组项（可以随时使用break语句停止遍历）"}},[a._v("#")]),a._v(" for of 遍历数组项（可以随时使用break语句停止遍历）")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  const colors = ['red', 'yellow', 'blue']\n  for (const color of colors) {\n      console.log(color) //=>'red' 'yellow' 'blue'\n  }\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h4",{attrs:{id:"array-foreach"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-foreach"}},[a._v("#")]),a._v(" array.forEach()")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  const arr = ['name','age','sex']\n  arr.forEach((item,index)=>{\n      console.log(item,index)  => name,0  age,1 sex,3\n  })\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"数组的映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的映射"}},[a._v("#")]),a._v(" 数组的映射")]),a._v(" "),s("h4",{attrs:{id:"array-map-方法-创建一个新的映射数组，而不是改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-map-方法-创建一个新的映射数组，而不是改变原数组"}},[a._v("#")]),a._v(" Array.map()方法  创建一个新的映射数组，而不是改变原数组")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("```\nlet arr = [1,3,5]\nlet numberarr = arr.map(item=>{\n    return item+1\n})\nconsole.log(numberarr)  => [2,4,6]\n```\n")])])]),s("h3",{attrs:{id:"数据的简化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据的简化"}},[a._v("#")]),a._v(" 数据的简化")]),a._v(" "),s("h4",{attrs:{id:"array-reduce-方法-通过调用callback函数来讲数组简化为一个值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-reduce-方法-通过调用callback函数来讲数组简化为一个值"}},[a._v("#")]),a._v(" Array.reduce() 方法 通过调用callback函数来讲数组简化为一个值")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("```\nlet arr = [2,3,5]\nfunction add (accumulator,number){\n    return accumulator + number\n}\nconst number = arr.reduce(add,1)\nconsole.log(number)  // 11\n// 将accumulator初始化为1，然后对每个累加数字和的数组项掉用add函数\n```\n")])])]),s("h3",{attrs:{id:"数据的连接方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据的连接方法"}},[a._v("#")]),a._v(" 数据的连接方法")]),a._v(" "),s("h4",{attrs:{id:"array-concat-方法-创建一个新的数组而不改变原来的数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-concat-方法-创建一个新的数组而不改变原来的数组"}},[a._v("#")]),a._v(" array.concat()方法 (创建一个新的数组而不改变原来的数组)")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [1,2,3]\nlet arrother = [4,5,6]\nlet newarr = arr.concat(arrother)\nconsole.log(newarr)  => [1,2,3,4,5,6]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h4",{attrs:{id:"扩展运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扩展运算符"}},[a._v("#")]),a._v(" 扩展运算符")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(" let arr = [9,8,7,1]\n let aa = [1,2,3]\n let bb = [...arr,...aa]\n\n let [a,...dd] = bb\n console.log(bb)  [9,8,7,1,1,2,3]\n console.log(a)  9\n console.log(dd) [8,7,1,1,2,3]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h3",{attrs:{id:"array-slice-方法-和splice方法-slice不会改变原数组-splice改变原数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-slice-方法-和splice方法-slice不会改变原数组-splice改变原数组"}},[a._v("#")]),a._v(" array.slice()方法 和splice方法 slice不会改变原数组 splice改变原数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v(" let arr = [1,2,3,4,5]\n let bb = arr.slice(0,2)\n console.log(bb) => [1,2]\n console.log(arr) => [1,2,3,4,5]\n let cc = arr.splice(2)\n console.log(cc) => [3,4,5]\n console.log(arr) => [1,2]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h3",{attrs:{id:"数组的拷贝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的拷贝"}},[a._v("#")]),a._v(" 数组的拷贝")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[a._v("1. 扩展运算符\n```\nconst color = ['pink','red','blue']\nconst clone = [...color]\nconsole.log(color === clone)  => false\n```\n// 浅拷贝\n2.concat()\n```\nconst color = ['red','white','black']\nlet arr =[].concat(color)\nconsole.log(arr===color) false\n```\n")])])]),s("h3",{attrs:{id:"arr-includes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-includes"}},[a._v("#")]),a._v(" arr.includes()")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("const number = [1,2,3,4,5]\nnumber.includes(2) =>true\nnumber.includes(8) =>false\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"arr-find-返回数组中满足条件的第一个元素的值-如果不存在则返回undefine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arr-find-返回数组中满足条件的第一个元素的值-如果不存在则返回undefine"}},[a._v("#")]),a._v(" arr.find() 返回数组中满足条件的第一个元素的值 如果不存在则返回undefine")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let arr = [2,3,4,5,6]\nlet a = arr.find(item=>{\n    return item%3 === 0\n})\nconsole.log(a)  // 3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"array-indexof-如果找不到元素就返回-1-找得到返回元素索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-indexof-如果找不到元素就返回-1-找得到返回元素索引"}},[a._v("#")]),a._v(" array.indexOf() 如果找不到元素就返回-1 找得到返回元素索引")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let aa = [1,2,3,4]\nlet a = aa.indexOf(5)\nconsole.log(a)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"array-every-一个数组中的每一样是否满足只要有一项不满足return-false"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-every-一个数组中的每一样是否满足只要有一项不满足return-false"}},[a._v("#")]),a._v(" array.every()   一个数组中的每一样是否满足只要有一项不满足return false")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let aa = [1,2,3,4]\nlet flag = aa.every(item => {\n    return item%1===0\n})\nconsole.log(flag) true\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"array-some-数组中只要有一项满足条件则返回true"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-some-数组中只要有一项满足条件则返回true"}},[a._v("#")]),a._v(" array.some()  数组中只要有一项满足条件则返回true")]),a._v(" "),s("h3",{attrs:{id:"array-filter-过滤返回满足条件的数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array-filter-过滤返回满足条件的数组"}},[a._v("#")]),a._v(" array.filter() 过滤返回满足条件的数组")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("let aa = [1,2,3,4]\nlet arr = aa.filter(item=>{\n    return item%2 === 1\n})\nconsole.log(arr)  // [1,3]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])])])}),[],!1,null,null,null);r.default=t.exports}}]);